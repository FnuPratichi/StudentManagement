"""Add students table with necessary columns

Revision ID: e8d6653915dc
Revises: 
Create Date: 2025-01-07 17:25:22.257391

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e8d6653915dc'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('students',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('dob', sa.Date(), nullable=False),
    sa.Column('father_name', sa.String(length=100), nullable=False),
    sa.Column('address', sa.String(length=255), nullable=False),
    sa.Column('contact_number', sa.String(length=15), nullable=False),
    sa.Column('gender', sa.String(length=10), nullable=False),
    sa.Column('date_of_admission', sa.Date(), nullable=False),
    sa.Column('course', sa.String(length=100), nullable=False),
    sa.Column('year_of_study', sa.Integer(), nullable=False),
    sa.Column('student_status', sa.String(length=50), nullable=False),
    sa.Column('emergency_contact_number', sa.String(length=15), nullable=False),
    sa.Column('nationality', sa.String(length=50), nullable=False),
    sa.Column('city', sa.String(length=50), nullable=False),
    sa.Column('state', sa.String(length=50), nullable=False),
    sa.Column('zip_code', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
#     with op.batch_alter_table('user', schema=None) as batch_op:
#         batch_op.alter_column('username',
#                existing_type=sa.VARCHAR(length=255),
#                type_=sa.String(length=100),
#                existing_nullable=False)
#         batch_op.alter_column('email',
#                existing_type=sa.VARCHAR(length=100),
#                nullable=False)
#         batch_op.alter_column('password',
#                existing_type=sa.VARCHAR(length=255),
#                type_=sa.String(length=100),
#                nullable=False)
#         batch_op.alter_column('role',
#                existing_type=sa.VARCHAR(length=255),
#                type_=sa.String(length=50),
#                nullable=False)
#         batch_op.create_unique_constraint(None, ['username'])
#         batch_op.create_unique_constraint(None, ['email'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
#     with op.batch_alter_table('user', schema=None) as batch_op:
#         batch_op.drop_constraint(None, type_='unique')
#         batch_op.drop_constraint(None, type_='unique')
#         batch_op.alter_column('role',
#                existing_type=sa.String(length=50),
#                type_=sa.VARCHAR(length=255),
#                nullable=True)
#         batch_op.alter_column('password',
#                existing_type=sa.String(length=100),
#                type_=sa.VARCHAR(length=255),
#                nullable=True)
#         batch_op.alter_column('email',
#                existing_type=sa.VARCHAR(length=100),
#                nullable=True)
#         batch_op.alter_column('username',
#                existing_type=sa.String(length=100),
#                type_=sa.VARCHAR(length=255),
#                existing_nullable=False)

    op.drop_table('students')
    # ### end Alembic commands ###
